{"version":3,"file":"sw.bundle.js","mappings":";sQACA,ovNAsCA,QAvCoB,CACZA,gBAAe,SAACC,GAAU,4HACV,EAAKC,aAAY,OAAvB,EAAH,KACLC,OAAOF,GAAU,0CAFO,EAGhC,EAEMG,eAAc,WAAG,iHACIC,OAAOC,OAAM,OAAnB,EAAH,KAEbC,QAAO,SAACC,GAAI,MAAc,wBAATA,CAA8B,IAC/CC,KAAI,SAACC,GAAY,OAAKL,OAAM,OAAQK,EAAa,IAAE,0CAJjC,EAKvB,EAEMC,gBAAe,SAACC,GAAS,uHACNP,OAAOQ,MAAMD,GAAQ,OAA9B,OAARE,EAAW,EAAH,uBACPA,GAAQ,0CAFc,EAG/B,EAEMZ,WAAU,WAAG,0HACVG,OAAOU,KAAK,wBAAsB,0CADxB,EAEnB,GCjBF,IAAMC,EAAgB,CACpB,KACA,4BACA,gCACA,gCACA,gCACA,iCACA,iCACA,iCACA,iCACA,eACA,gBACA,kBACA,oBACA,kBAGFC,KAAKC,iBAAiB,WAAW,SAACC,GAChCC,QAAQC,IAAI,iCACZF,EAAMG,UAAUC,EAAAA,gBAA4B,GAAD,OAAKP,IAClD,IAEAC,KAAKC,iBAAiB,YAAY,SAACC,GACjCC,QAAQC,IAAI,iCACZF,EAAMG,UAAUC,EAAAA,iBAClB","sources":["webpack://capstone-project-dicoding/./src/scripts/utils/cache-helper.js","webpack://capstone-project-dicoding/./src/scripts/sw.js"],"sourcesContent":["const CacheHelper = {\r\n  async cachingAppShell(requests) {\r\n    const cache = await this._openCache();\r\n    cache.addAll(requests);\r\n  },\r\n\r\n  async deleteOldCache() {\r\n    const cacheNames = await caches.keys();\r\n    cacheNames\r\n      .filter((name) => name !== 'PeduliLingkungan-V1')\r\n      .map((filteredName) => caches.delete(filteredName));\r\n  },\r\n\r\n  async revalidateCache(request) {\r\n    const response = await caches.match(request);\r\n    return response;\r\n  },\r\n    \r\n  async _openCache() {\r\n    return caches.open('PeduliLingkungan-V1');\r\n  },\r\n\r\n  // async _fetchRequest(request) {\r\n  //   const response = await fetch(request);\r\n \r\n  //   if (!response || response.status !== 200) {\r\n  //     return response;\r\n  //   }\r\n \r\n  //   await this._addCache(request);\r\n  //   return response;\r\n  // },\r\n\r\n  // async _addCache(request) {\r\n  //   const cache = await this._openCache();\r\n  //   cache.add(request);\r\n  // },\r\n};\r\n \r\nexport default CacheHelper;","/* eslint-disable no-restricted-globals */\r\nimport CacheHelper from './utils/cache-helper';\r\n\r\nconst assetsToCache = [\r\n  './',\r\n  './icons/maskable_icon.png',\r\n  './icons/maskable_icon_x48.png',\r\n  './icons/maskable_icon_x72.png',\r\n  './icons/maskable_icon_x96.png',\r\n  './icons/maskable_icon_x128.png',\r\n  './icons/maskable_icon_x192.png',\r\n  './icons/maskable_icon_x384.png',\r\n  './icons/maskable_icon_x512.png',\r\n  './index.html',\r\n  './favicon.ico',\r\n  './app.bundle.js',\r\n  './app.webmanifest',\r\n  './sw.bundle.js',\r\n];\r\n\r\nself.addEventListener('install', (event) => {\r\n  console.log('Installing Service Worker ...');\r\n  event.waitUntil(CacheHelper.cachingAppShell([...assetsToCache]));\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n  console.log('Activating Service Worker ...');\r\n  event.waitUntil(CacheHelper.deleteOldCache());\r\n});\r\n\r\n// self.addEventListener('fetch', (event) => {\r\n//   console.log(event.request);\r\n//   event.respondWith(CacheHelper.revalidateCache(event.request));\r\n// });\r\n"],"names":["cachingAppShell","requests","_openCache","addAll","deleteOldCache","caches","keys","filter","name","map","filteredName","revalidateCache","request","match","response","open","assetsToCache","self","addEventListener","event","console","log","waitUntil","CacheHelper"],"sourceRoot":""}